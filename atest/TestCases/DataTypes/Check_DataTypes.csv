*** Test Cases ***;${scalar};@{list};e{list_eval};&{dict};e{dict_eval};e{eval};${exp_eval};${user}[id];${user}[name][first];${user.name.last};e{user.chk}
One;Sum List;1,2,3,4;"[""1"",""2"",""3"",""4""]";key=value;{'key': 'value'};[1,2,3,4];10;1;Pekka;Klärck;{'id': '1', 'name': {'first': 'Pekka', 'last': 'Klärck'}}
Two;Should be Equal;a,b,c,d;"[""a"",""b"",""c"",""d""]";key,value;{'key': 'value'};True;${true};2;Ed;Manlove;{'id': '2', 'name': {'first': 'Ed', 'last': 'Manlove'}}
Three;Whos your Daddy;"!,"",',$";"[""!"",'""',""'"",""$""]";z,value,a,value2;{'a': 'value2', 'z': 'value'};{'Daddy' : 'René'};René;3;Tatu;Aalto;{'id': '3', 'name': {'first': 'Tatu', 'last': 'Aalto'}}
4;Should be Equal;1;"[""1""]";key=value;{'key': 'value'};1;${1};4;Jani;Mikkonen;{'id': '4', 'name': {'first': 'Jani', 'last': 'Mikkonen'}}
5;Should be Equal;;[];a=${2};{'a':2};"""string""";string;5;Mikko;Korpela;{'id': '5', 'name': {'first': 'Mikko', 'last': 'Korpela'}}
6;Should be Equal;[1,2];"[""[1"",""2]""]";key=value,key2=value2;{'key': 'value', 'key2': 'value2'};None;${none};6;Ismo;Aro;{'id': '6', 'name': {'first': 'Ismo', 'last': 'Aro'}}
Variable Replacement;Should be Equal;${1},${1.4};[1,1.4];WAHR=${TRUE},zwei=${2};{'WAHR': True, 'zwei': 2};${5} - ${3-1};${3};7;${SUITENAME};${LOG_LEVEL};{'id': '7', 'name': {'first': 'Atest.TestCases.DataTypes.Check DataTypes', 'last': 'TRACE'}}